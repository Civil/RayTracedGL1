#version 460
#extension GL_EXT_ray_tracing : require

#define DESC_SET_GLOBAL_UNIFORM 2
#define DESC_SET_VERTEX_DATA 3
#define DESC_SET_TEXTURES 4
#include "ShaderCommonGLSLFunc.h"

//layout(location = 0) rayPayloadInEXT vec3 hitValue;
hitAttributeEXT vec2 inBaryCoords;


void main()
{
	vec3 baryCoords = vec3(1.0f - inBaryCoords.x - inBaryCoords.y, inBaryCoords.x, inBaryCoords.y);

	ShTriangle tr = getTriangle(gl_InstanceCustomIndexEXT, gl_GeometryIndexEXT, gl_PrimitiveID);

    vec2 texCoord = tr.texCoords[0] * baryCoords.x + tr.texCoords[1] * baryCoords.y + tr.texCoords[2] * baryCoords.z;
  	vec4 color = vec4(1, 1, 1, 1);

	if (tr.materials[0][0] > 0)
	{
		color = getTextureSample(tr.materials[0][0], texCoord);
	}  

	if (color.a > 0.5)
	{
		// accept
		//terminateRayEXT;
	}
	else
	{
		// continue
		ignoreIntersectionEXT;
	}

	//hitValue += color.rgb * color.a;
	ignoreIntersectionEXT;
}
