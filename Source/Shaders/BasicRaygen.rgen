#version 460
#extension GL_EXT_ray_tracing : require

#define DESC_SET_GLOBAL_UNIFORM 2
#define DESC_SET_VERTEX_DATA 3
#include "ShaderCommonGLSLFunc.h"

layout(binding = BINDING_ACCELERATION_STRUCTURE, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = BINDING_STORAGE_IMAGE, set = 1, rgba8) uniform image2D image;


layout(location = 0) rayPayloadEXT vec3 hitValue;


void main() 
{
	const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
	const vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
	vec2 d = inUV * 2.0 - 1.0;

	vec4 origin = globalUniform.invView * vec4(0, 0, 0, 1);
	vec4 target = globalUniform.invProjection * vec4(d.x, d.y, 1, 1) ;
	vec4 dir = globalUniform.invView * vec4(normalize(target.xyz / target.w), 0) ;

	hitValue = vec3(1,0,0);

	traceRayEXT(
		topLevelAS,
		gl_RayFlagsNoneEXT, 
		0xFF, 
		0, 0, 	// sbtRecordOffset, sbtRecordStride
		0, 		// missIndex
		origin.xyz, 0.001, dir.xyz, 10000.0, 
		0);		// payload

	imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue, 0.0));
}
